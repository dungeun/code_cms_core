# SSH 터널을 통한 프로덕션 DB 접근
version: '3.8'

services:
  # SSH 터널 서비스
  db-tunnel:
    image: alpine:latest
    container_name: db-tunnel
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache openssh-client socat &&
        # PostgreSQL 터널
        socat TCP-LISTEN:5432,fork,reuseaddr EXEC:'ssh -T -o StrictHostKeyChecking=no -i /ssh/key root@${COOLIFY_SERVER_IP} socat STDIO TCP:f8g0kswkokkgogcs00sos40g:5432' &
        # Redis 터널  
        socat TCP-LISTEN:6379,fork,reuseaddr EXEC:'ssh -T -o StrictHostKeyChecking=no -i /ssh/key root@${COOLIFY_SERVER_IP} socat STDIO TCP:agsck4skoos4ss08gwckcs08:6379' &
        wait
      "
    ports:
      - "5432:5432"
      - "6379:6379"
    volumes:
      - ./ssh:/ssh:ro
    environment:
      - COOLIFY_SERVER_IP=${COOLIFY_SERVER_IP}
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge