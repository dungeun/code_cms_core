name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate version
        id: version
        run: |
          VERSION=${{ github.event.inputs.version }}
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from commits
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0)..HEAD)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Update version in package.json
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Create release branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b release/${{ github.event.inputs.version }}
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git push origin release/${{ github.event.inputs.version }}

  run-tests:
    name: Run Full Test Suite
    runs-on: ubuntu-latest
    needs: prepare-release
    strategy:
      matrix:
        test-type: [unit, integration, e2e]
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blee_cms_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/${{ github.event.inputs.version }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup database
        run: |
          npx prisma generate
          npx prisma migrate deploy
      
      - name: Run ${{ matrix.test-type }} tests
        run: npm run test:${{ matrix.test-type }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/blee_cms_test
          REDIS_URL: redis://localhost:6379
          SESSION_SECRET: test-secret

  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: [prepare-release, run-tests]
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/${{ github.event.inputs.version }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: |
            blee-cms:${{ needs.prepare-release.outputs.version }}
            blee-cms:latest
          outputs: type=docker,dest=blee-cms-${{ matrix.platform }}.tar
          build-args: |
            NODE_ENV=production
            APP_VERSION=${{ needs.prepare-release.outputs.version }}
      
      - name: Compress artifact
        run: |
          gzip blee-cms-${{ matrix.platform }}.tar
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-${{ matrix.platform }}
          path: blee-cms-${{ matrix.platform }}.tar.gz

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [prepare-release, build-release]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/${{ github.event.inputs.version }}
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Create release notes
        run: |
          cat > RELEASE_NOTES.md << EOF
          # 블리CMS Enterprise ${{ needs.prepare-release.outputs.version }}
          
          ## 새로운 기능
          ${{ needs.prepare-release.outputs.changelog }}
          
          ## 설치 방법
          
          ### Docker
          \`\`\`bash
          docker pull ghcr.io/${{ github.repository }}/blee-cms:${{ needs.prepare-release.outputs.version }}
          docker run -d -p 3000:3000 ghcr.io/${{ github.repository }}/blee-cms:${{ needs.prepare-release.outputs.version }}
          \`\`\`
          
          ### Docker Compose
          \`\`\`yaml
          version: '3.8'
          services:
            app:
              image: ghcr.io/${{ github.repository }}/blee-cms:${{ needs.prepare-release.outputs.version }}
              ports:
                - "3000:3000"
          \`\`\`
          
          ## 시스템 요구사항
          - Node.js 20 이상
          - PostgreSQL 15 이상
          - Redis 7 이상
          - 최소 2GB RAM
          - 2 CPU 코어
          
          ## 주요 변경사항
          - Kakao/Naver OAuth 지원
          - Socket.IO 실시간 통신
          - Toss Payments 통합
          - 10,000+ 동시 사용자 지원
          - Prometheus 모니터링
          - 플러그인 샌드박스 보안
          
          ## 업그레이드 가이드
          기존 버전에서 업그레이드하는 경우:
          1. 데이터베이스 백업
          2. 새 버전 배포
          3. 마이그레이션 실행: \`npx prisma migrate deploy\`
          
          ## 알려진 문제
          이 릴리스에 알려진 문제가 없습니다.
          
          ## 기여자
          이 릴리스에 기여해주신 모든 분들께 감사드립니다.
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.prepare-release.outputs.version }}
          name: 블리CMS Enterprise ${{ needs.prepare-release.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: [prepare-release, create-release]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/${{ github.event.inputs.version }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/blee-cms:${{ needs.prepare-release.outputs.version }}
            ghcr.io/${{ github.repository }}/blee-cms:latest
            ${{ secrets.DOCKER_USERNAME }}/blee-cms:${{ needs.prepare-release.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/blee-cms:latest
          build-args: |
            NODE_ENV=production
            APP_VERSION=${{ needs.prepare-release.outputs.version }}

  merge-release:
    name: Merge Release Branch
    runs-on: ubuntu-latest
    needs: [prepare-release, publish-docker]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: release/${{ github.event.inputs.version }}
          base: main
          title: "Release ${{ needs.prepare-release.outputs.version }}"
          body: |
            ## Release ${{ needs.prepare-release.outputs.version }}
            
            This PR merges the release branch for version ${{ needs.prepare-release.outputs.version }}.
            
            ### Changelog
            ${{ needs.prepare-release.outputs.changelog }}
            
            ### Checklist
            - [x] Version bumped
            - [x] Tests passed
            - [x] Docker images built
            - [x] Release created
            - [ ] Ready to merge
          labels: release, automated
          assignees: ${{ github.actor }}

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [prepare-release, create-release]
    if: always()
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Release ${{ needs.prepare-release.outputs.version }} has been created!
            
            GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.prepare-release.outputs.version }}
            Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/blee-cms
            
            Triggered by: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: env.SLACK_WEBHOOK != ''
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: 블리CMS Release ${{ needs.prepare-release.outputs.version }}
          to: ${{ secrets.RELEASE_EMAIL_LIST }}
          from: BleeCMS CI/CD <noreply@blee-cms.com>
          body: |
            새로운 블리CMS 버전이 릴리스되었습니다!
            
            버전: ${{ needs.prepare-release.outputs.version }}
            릴리스 노트: https://github.com/${{ github.repository }}/releases/tag/${{ needs.prepare-release.outputs.version }}
            
            Docker 이미지:
            - ghcr.io/${{ github.repository }}/blee-cms:${{ needs.prepare-release.outputs.version }}
            - ${{ secrets.DOCKER_USERNAME }}/blee-cms:${{ needs.prepare-release.outputs.version }}
            
            감사합니다.
            블리CMS 팀