version: '3.8'

services:
  # PostgreSQL 마스터 (Primary)
  postgres-master:
    image: postgres:15-alpine
    container_name: postgres-master
    hostname: postgres-master
    environment:
      POSTGRES_DB: ${DB_NAME:-blee_cms}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_REPLICATION_MODE: master
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-repl_password}
      # WAL 설정
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=ko_KR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres-master-data:/var/lib/postgresql/data
      - ./master/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./master/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init-scripts:/docker-entrypoint-initdb.d
    command: |
      postgres 
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL 읽기 복제본 1
  postgres-replica1:
    image: postgres:15-alpine
    container_name: postgres-replica1
    hostname: postgres-replica1
    environment:
      POSTGRES_DB: ${DB_NAME:-blee_cms}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_MASTER_SERVICE: postgres-master
      POSTGRES_REPLICATION_MODE: slave
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-repl_password}
      POSTGRES_MASTER_PORT: 5432
    ports:
      - "5433:5432"
    volumes:
      - postgres-replica1-data:/var/lib/postgresql/data
      - ./replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./replica/recovery.conf:/var/lib/postgresql/data/recovery.conf
    depends_on:
      postgres-master:
        condition: service_healthy
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL 읽기 복제본 2
  postgres-replica2:
    image: postgres:15-alpine
    container_name: postgres-replica2
    hostname: postgres-replica2
    environment:
      POSTGRES_DB: ${DB_NAME:-blee_cms}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_MASTER_SERVICE: postgres-master
      POSTGRES_REPLICATION_MODE: slave
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-repl_password}
      POSTGRES_MASTER_PORT: 5432
    ports:
      - "5434:5432"
    volumes:
      - postgres-replica2-data:/var/lib/postgresql/data
      - ./replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./replica/recovery.conf:/var/lib/postgresql/data/recovery.conf
    depends_on:
      postgres-master:
        condition: service_healthy
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgBouncer - 연결 풀링
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    environment:
      DATABASES_HOST: postgres-master
      DATABASES_PORT: 5432
      DATABASES_DBNAME: ${DB_NAME:-blee_cms}
      DATABASES_USER: ${DB_USER:-postgres}
      DATABASES_PASSWORD: ${DB_PASSWORD:-postgres}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
      MIN_POOL_SIZE: 10
      RESERVE_POOL_SIZE: 5
      RESERVE_POOL_TIMEOUT: 3
      SERVER_LIFETIME: 3600
      SERVER_IDLE_TIMEOUT: 600
      QUERY_WAIT_TIMEOUT: 120
      CLIENT_IDLE_TIMEOUT: 0
      CLIENT_LOGIN_TIMEOUT: 60
      STATS_PERIOD: 60
    ports:
      - "6432:5432"
    volumes:
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      - postgres-master
      - postgres-replica1
      - postgres-replica2
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  # HAProxy - 읽기 복제본 로드 밸런싱
  haproxy:
    image: haproxy:2.8-alpine
    container_name: haproxy
    ports:
      - "5435:5432"  # 읽기 전용 포트
      - "8404:8404"  # HAProxy 통계 페이지
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - postgres-replica1
      - postgres-replica2
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-master-data:
  postgres-replica1-data:
  postgres-replica2-data:

networks:
  postgres-network:
    driver: bridge